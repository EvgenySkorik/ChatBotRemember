from typing import List

from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton

from app.models.shemas import HabitShemaOUT


class ReplyKeyboardRep:
    @classmethod
    def start_keyboard(cls):
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è Reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ –º–µ–Ω—é"""
        keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="üìù –î–û–ë–ê–í–ò–¢–¨ –ü–†–ò–í–´–ß–ö–£"), KeyboardButton(text="üìã –°–ü–ò–°–û–ö –ü–†–ò–í–´–ß–ï–ö")]
            ],
            resize_keyboard=True
        )
        return keyboard


class InlineKeyboardRep:
    @classmethod
    def habits_keyboard(cls, habits):
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–ø–∏—Å–∫–∞ –ø—Ä–∏–≤—ã—á–µ–∫"""
        buttons = []
        for habit in habits:
            long_button = InlineKeyboardButton(
                text=f"üìå {habit.title.upper()}\n({habit.frequency.lower()} √ó {habit.goal_days})",
                callback_data=f"detail_{habit.title}" #–ü—Ä–∏–≤—ã—á–∫–∞
            )
            buttons.append([long_button])

            action_buttons = [
                InlineKeyboardButton(text="‚úÖ", callback_data=f"mark_{habit.title}"),  # –û—Ç–º–µ—Ç–∏—Ç—å
                InlineKeyboardButton(text="‚úèÔ∏è", callback_data=f"edit_{habit.title}"),  # –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                InlineKeyboardButton(text="üóëÔ∏è", callback_data=f"delete_{habit.title}")  # –£–¥–∞–ª–∏—Ç—å
            ]

            buttons.append(action_buttons)

        keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
        return keyboard

    @classmethod
    def frequency_keyboard(cls):
        """–°—Ç—Ä–æ–∏—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —á–∞—Å—Ç–æ—Ç—ã –ø—Ä–∏–≤—ã—á–∫–∏"""
        numbers = ["–æ–¥–∏–Ω", "–¥–≤–∞", "—Ç—Ä–∏", "—á–µ—Ç—ã—Ä–µ", "–ø—è—Ç—å"]
        units = ["–¥–µ–Ω—å", "–Ω–µ–¥–µ–ª—é", "–º–µ—Å—è—Ü", "–∫–≤–∞—Ä—Ç–∞–ª", "–≥–æ–¥"]

        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
        buttons = []
        for num, unit in zip(numbers, units):
            left_button = InlineKeyboardButton(text=num, callback_data=f"freq_num_{num}")
            middle_button = InlineKeyboardButton(text="–≤", callback_data="no_action")
            right_button = InlineKeyboardButton(text=unit, callback_data=f"freq_unit_{unit}")

            buttons.append([left_button, middle_button, right_button])

        keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
        return keyboard

    @classmethod
    def frequency_keyboard_by_update(cls):
        """–°—Ç—Ä–æ–∏—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —á–∞—Å—Ç–æ—Ç—ã –ø—Ä–∏–≤—ã—á–∫–∏"""
        numbers = ["–æ–¥–∏–Ω", "–¥–≤–∞", "—Ç—Ä–∏", "—á–µ—Ç—ã—Ä–µ", "–ø—è—Ç—å"]
        units = ["–¥–µ–Ω—å", "–Ω–µ–¥–µ–ª—é", "–º–µ—Å—è—Ü", "–∫–≤–∞—Ä—Ç–∞–ª", "–≥–æ–¥"]

        buttons = []
        for num, unit in zip(numbers, units):
            left_button = InlineKeyboardButton(text=num, callback_data=f"update-freq_num_{num}")
            middle_button = InlineKeyboardButton(text="–≤", callback_data="no_action")
            right_button = InlineKeyboardButton(text=unit, callback_data=f"update-freq_unit_{unit}")

            buttons.append([left_button, middle_button, right_button])

        keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
        return keyboard

    @classmethod
    def reminder_keyboard(cls, habit_title):
        """–°—Ç—Ä–æ–∏—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞"""
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(text="‚úÖ –î–∞", callback_data=f"reminder_yes_{habit_title}"),
                InlineKeyboardButton(text="‚ùå –ù–µ—Ç", callback_data=f"reminder_no_{habit_title}")
            ]
        ])
        return keyboard



